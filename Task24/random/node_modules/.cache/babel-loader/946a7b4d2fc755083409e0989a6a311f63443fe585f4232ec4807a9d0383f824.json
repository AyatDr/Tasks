{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahfo\\\\OneDrive\\\\Desktop\\\\Internship\\\\Task241\\\\random\\\\src\\\\components\\\\Random\\\\Random.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '..Button/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Random extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: [255, 255, 0]\n    };\n\n    // Binding handleClick method\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentDidMount() {\n    this.applyColor();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.applyColor();\n  }\n  formatColor(ary) {\n    return 'rgb(' + ary.join(', ') + ')';\n  }\n  isLight() {\n    const rgb = this.state.color;\n    return rgb.reduce((a, b) => a + b) < 127 * 3;\n  }\n  applyColor() {\n    const color = this.formatColor(this.state.color);\n    document.body.style.background = color;\n  }\n  chooseColor() {\n    // Initialize an empty array named 'random'.\n    const random = [];\n    // Start of a for loop that will run three times (from 0 to 2).\n    for (let i = 0; i < 3; i++) {\n      // Inside the loop, we generate a random number.\n      random.push(Math.floor(Math.random() * 256));\n    }\n    return random;\n  }\n  handleClick() {\n    // Calling setState to update the component's state\n    this.setState({\n      // Updating the 'color' property of the component's state.\n      color: this.chooseColor()\n    });\n  }\n\n  // Definition of the render method in a React component class\n  render() {\n    return (\n      /*#__PURE__*/\n      // The render method returns the JSX (JavaScript XML) that describes what UI to display.\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: this.isLight() ? 'white' : 'black',\n          children: [\"Your color is : \", this.formatColor(this.state.color), \" !\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          light: this.isLight(),\n          onClick: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    );\n  }\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(Random, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 3\n}, this), document.getElementById('app'));\nexport default Random;","map":{"version":3,"names":["React","ReactDOM","Button","jsxDEV","_jsxDEV","Random","Component","constructor","props","state","color","handleClick","bind","componentDidMount","applyColor","componentDidUpdate","prevProps","prevState","formatColor","ary","join","isLight","rgb","reduce","a","b","document","body","style","background","chooseColor","random","i","push","Math","floor","setState","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","light","onClick","getElementById"],"sources":["C:/Users/mahfo/OneDrive/Desktop/Internship/Task241/random/src/components/Random/Random.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '..Button/Button/Button';\n\nclass Random extends React.Component {\n\n  constructor(props){\n    super(props);\n\n     this.state = { color: [255, 255, 0] } ;\n\n      // Binding handleClick method\n      this.handleClick = this.handleClick.bind(this);\n\n  }\n  \n  componentDidMount() {\n    this.applyColor();\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    this.applyColor();\n  }\n\n  formatColor(ary) {\n    return 'rgb(' + ary.join(', ') + ')';\n  }\n\n  isLight() {\n    const rgb = this.state.color;\n    return rgb.reduce((a,b) => a+b) < 127 * 3;\n  }\n\n  applyColor() {\n    const color = this.formatColor(this.state.color);\n    document.body.style.background = color;\n  }\n\n  chooseColor() {\n    // Initialize an empty array named 'random'.\n    const random = [];\n    // Start of a for loop that will run three times (from 0 to 2).\n    for (let i = 0; i < 3; i++) {\n      // Inside the loop, we generate a random number.\n      random.push(Math.floor(Math.random()*256));\n    }\n    return random;\n  }\n\n  handleClick(){\n     // Calling setState to update the component's state\n    this.setState({\n       // Updating the 'color' property of the component's state.\n      color: this.chooseColor()\n  });\n  }\n\n   // Definition of the render method in a React component class\n  render() {\n    return (\n       // The render method returns the JSX (JavaScript XML) that describes what UI to display.\n      <div>\n         {/* A heading <h1> element displaying dynamic content. */}\n        <h1 className={this.isLight() ? 'white' : 'black'}>\n        Your color is : {this.formatColor(this.state.color)} !\n        </h1>\n        <Button  light={this.isLight()} onClick={this.handleClick} />\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(\n  <Random />, \n  document.getElementById('app')\n);\n\n\nexport default Random ;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}